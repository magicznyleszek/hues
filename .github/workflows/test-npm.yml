name: Test JS, CSS and build

on: workflow_call

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          # version from .nvmrc and package.json
          node-version: '24.2.0'
          # download newer semver match if available
          check-latest: true
          cache: 'npm'

      - name: Identify resolved node version
        id: resolved-node-version
        run: echo "NODE_VERSION=$(node --version)" >> "$GITHUB_OUTPUT"

      - name: Add "Node ${{ steps.resolved-node-version.outputs.NODE_VERSION }}" to summary
        run: echo "${{ matrix.node-version }} â†’ **${{ steps.resolved-node-version.outputs.NODE_VERSION }}**" >> "$GITHUB_STEP_SUMMARY"

      # Cache: Use cache for node_modules - keyed on os, node version, package-lock, and patches
      - uses: actions/cache@v4
        name: Check for cached node_modules
        id: cache-nodemodules
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-arch-${{ runner.arch }}-build-${{ env.cache-name }}-node-v${{ steps.resolved-node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/package-lock.json', 'patches/**/*.patch') }}

      # Cache miss: If node_modules has not been cached, run `npm install`
      - name: Install JavaScript dependencies (if no cached node_modules)
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install

      # Check for JS/TS errors
      - name: Check TypeScript
        run: npm run lint:scripts -- --quiet

      # Check for CSS errors
      - name: Check CSS
        run: npm run lint:styles -- --quiet

      # Check that the full build succeeds
      - name: Build
        run: npm run build
